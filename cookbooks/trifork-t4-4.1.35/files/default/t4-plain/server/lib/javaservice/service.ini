; Please note, the following sections/entries must be considered according to the
; nature of your setup:
;
; [Service]
; username= ???
; password = ???
; stdout = ???
; stderr = ???
;
; [Environment]
; TRIFORK_DOMAIN_NAME= ???
; TRIFORK_SERVER_NAME= ???
; JDK_ROOT= ???
;
;



[Service]
; The name of the service
servicename=TriforkServer
; The display name (which appears in the ControlPanel services application)
displayname=Trifork Enterprise Application Server
; The account to use for the service. Defaults to LocalSystem
;username=.\user
; Password for the service account. Defaults to empty password
;password=pass
; Redirection of System.out (optional)
stdout={STDOUT}
; Redirection of System.err (optional)
stderr={STDERR}
; The current directory for the service process
workingdir={WORKINGDIR}
; Allow service to be interactive - default false
;interactive=true
; auto | demand | disabled
starttype = auto
; ignore | normal
errorcontrol = normal

;mainthreadexit = stopservice

[Java]
; Name of DLL containing the virtual machine. Default=jvm.dll
;vmlib=jvm.dll
; Name of class containing the entrypoint method
entryclass=com.trifork.eas.launcher.Launcher
; Name of entrypoint method. Default=main
;entrymethod=main
; Arguments to the main method (optional)
arg1=-jar
arg2=c:\Trifork-4.1.x\server\lib\kernel.jar
arg3=server
arg4=start

; Name of class containing the pause method (optional)
;pauseclass=dk.eos.service.SampleService
; Name of the pause method (optional)
;pausemethod=dopause

; Name of class containing the continue method (optional)
;continueclass=dk.eos.service.SampleService
; Name of continue method (optional)
;continuemethod=docont

; Name of class containing the stop method (optional)
;stopclass=com.trifork.eas.launcher.Launcher
; Name of stop method (optional)
;stopmethod=main
; Max amount of time in ms, the stopmethod is allowed to run (optional defalt 10seconds)
;stopmethodtimeout=10000


[Environment]
; This section is used for creating the environment for the service process.
; You can refer to environment variables using the same syntax as in the NT Console,
; i.e. %VARIABLE%.
; It is important to make sure that the jvm.dll is in the path.
; To use another server or domain change the following settings:
;
TRIFORK_DOMAIN_NAME={TRIFORKDOMAINNAME}
TRIFORK_SERVER_NAME={TRIFORKSERVERNAME}
TRIFORK_DOMAIN_DIR={TRIFORKDOMAINDIR}
;
JDK_ROOT=???
;
TRIFORK_INSTALL_DIR=<installation root>\server
EASLIB=%TRIFORK_INSTALL_DIR%\lib
CLASSPATH=%EASLIB%\launcher.jar;%EASLIB%\api.jar
; Append the location of jvm.dll to the path
PATH=%JDK_ROOT%\jre\bin\server;%PATH%;%TRIFORK_DOMAIN_DIR%\bin

[Java-Options]
; This section is used for creating the options for the Java interpreter.
; You will always need the -Djava.class.path option which is the classpath
-Djava.class.path=%CLASSPATH%
-Djava.ext.dirs=%EASLIB%\ext;%TRIFORK_DOMAIN_DIR%\lib\share\ext;%JDK_ROOT%\lib\ext;%JDK_ROOT%\jre\lib\ext
-Dtrifork.user.classpath=%TRIFORK_USER_CP%
-Djava.security.policy=%EASLIB%\security\server.policy
-Djava.security.auth.policy=%EASLIB%\security\server.auth.policy
-Xbootclasspath/p:%EASLIB%\boot.jar;%EASLIB%\jdkopt.jar
-Dtrifork.install.dir=%TRIFORK_INSTALL_DIR%
-Dtrifork.domain.dir=%TRIFORK_DOMAIN_DIR%
-Dtrifork.node.name=%COMPUTERNAME%
-Dtrifork.domain.name=%TRIFORK_DOMAIN_NAME%
-Dtrifork.server.name=%TRIFORK_SERVER_NAME%
-Djava.endorsed.dirs=%EASLIB%\endorsed;%TRIFORK_DOMAIN_DIR%\lib\shared\endorsed


